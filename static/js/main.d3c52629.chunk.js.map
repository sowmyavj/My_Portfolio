{"version":3,"sources":["images/sowmya.jpg","images/linkedin.png","images/github.png","docs/Sowmya_Vijayakumar_resume.pdf","components/ProfilePicture.js","components/Contact.js","components/HomePage.js","components/Resume.js","components/NavBar.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ProfilePicture","react_default","a","createElement","className","src","profilePic","alt","Contact","href","target","rel","linkedinLogo","githubLogo","Component","HomePage","components_ProfilePicture","id","map","item","components_Contact","Resume","style","overflow","app","url","resume","NavBar","App","react_router_dom","basename","process","components_NavBar","react_router","name","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qSCUzBC,EARQ,WACnB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAYC,IAAI,iBAAiBH,UAAU,gECW9CI,mLAVX,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,KAAGM,KAAK,2DAA2DC,OAAO,SAASC,IAAI,uBACrFV,EAAAC,EAAAC,cAAA,OAAKE,IAAKO,IAAcL,IAAI,gBAAgBH,UAAU,qBACxDH,EAAAC,EAAAC,cAAA,KAAGM,KAAK,+BAA+BC,OAAO,SAASC,IAAI,uBACzDV,EAAAC,EAAAC,cAAA,OAAKE,IAAKQ,IAAYN,IAAI,cAAcH,UAAU,6BAPtCU,aCqBPC,mLAjBX,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,mBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,kFACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,kIAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACdH,EAAAC,EAAAC,cAAA,MAAIc,GAAG,mBAXU,CAAC,aAAc,UAAW,QAAS,YAAa,QAAS,MAAO,QAAS,UAAW,QAAS,aAAc,WAY1GC,IAAI,SAAAC,GAAI,OAAIlB,EAAAC,EAAAC,cAAA,UAAKgB,MAEnClB,EAAAC,EAAAC,cAACiB,EAAD,cAhBeN,sCCDFO,mLAEjB,OAAOpB,EAAAC,EAAAC,cAAA,OAAKmB,MAAO,CAACC,SAAS,WACrBtB,EAAAC,EAAAC,cAACqB,EAAA,UAAD,CAAWC,IAAKC,cAHQZ,aCWrBa,mLAVX,OACE1B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWK,KAAK,KAA7B,SACAR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWK,KAAK,WAA7B,mBANWK,aCkBNc,mLAXX,OACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQC,SAAUC,iBAChB9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6B,EAAD,MACA/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,KAAK,OAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtB,IAC7Cd,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAK,EAACC,KAAK,UAAUC,UAAWhB,aAP7CP,aCKEwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d3c52629.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sowmya.04b114cb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.fd0d5546.png\";","module.exports = __webpack_public_path__ + \"static/media/github.06111c18.png\";","module.exports = __webpack_public_path__ + \"static/media/Sowmya_Vijayakumar_resume.aad023cc.pdf\";","import React from 'react';\nimport profilePic from '../images/sowmya.jpg';\nconst ProfilePicture = () => {\n    return (\n        <div className=\"profileImage\">\n        <img src={profilePic} alt=\"sowmya profile\" className=\"img-circle profileImage\"/>\n        </div>\n    );\n};\n\nexport default ProfilePicture;","import React, { Component } from 'react';\nimport linkedinLogo from '../images/linkedin.png';\nimport githubLogo from '../images/github.png';\n\nclass Contact extends Component {\n  render() {\n    return (\n        <div className=\"contact\">\n        <a href=\"https://www.linkedin.com/in/sowmya-vijayakumar-a72ab668/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={linkedinLogo} alt=\"LinkedIn logo\" className=\"img-circle logo\"/></a>\n        <a href=\"https://github.com/sowmyavj/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={githubLogo} alt=\"Github logo\" className=\"img-circle logo\"/></a>\n        </div>\n    )\n  }\n}\nexport default Contact;","import React, { Component } from 'react';\nimport ProfilePicture from './ProfilePicture';\nimport Contact from './Contact';\n\nclass HomePage extends Component {\n  render() {\n    const technologies = ['JavaScript', 'ReactJS', 'Redux', 'Bootstrap', 'HTML5', 'CSS', 'Babel', 'Webpack', 'Redis', 'Postgresql', 'MongoDB'];\n\n    return (\n      <div className=\"homePage\">\n        <ProfilePicture/>\n        <h2 className=\"display-4\">Hi, I am Sowmya</h2>\n        <p className=\"lead\">I am a front-end developer. ReactJS made me fall in love with web development.</p>\n        <p className=\"lead\">I am currently looking for opportunities in frontend development. I have over six years of experience\n            in software development.\n        </p>\n        <hr className=\"my-4\"/>\n        <ul id=\"horizontal-list\">\n            {technologies.map(item => <li>{item}</li>)}\n        </ul>\n        <Contact/>\n      </div>\n    )\n  }\n}\nexport default HomePage;","import React, { Component } from \"react\";\nimport resume from '../docs/Sowmya_Vijayakumar_resume.pdf';\nimport { PDFReader } from 'react-read-pdf';\nexport default class Resume extends Component{\n  render(){\n    return <div style={{overflow:'scroll'}}>\n            <PDFReader url={resume}/>\n           </div>\n  }\n}","import React, { Component } from 'react';\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <ul className=\"nav\">\n          <a className=\"nav-link\" href=\"/\">About</a>\n          <a className=\"nav-link\" href=\"/resume\">Resume</a>\n        </ul>\n      </header>\n    )\n  }\n}\nexport default NavBar;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport '../styles/styles.css';\nimport HomePage from './HomePage';\nimport Resume from './Resume';\nimport NavBar from './NavBar';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <NavBar />\n          <Route name=\"home\" exact path=\"/\" component={HomePage} />\n          <Route name=\"resume\" exact path=\"/resume\" component={Resume} />\n        </div>\n      </Router>\n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}